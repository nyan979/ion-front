import { grpc } from '@improbable-eng/grpc-web';
/**
 * Service interface
 */
export interface Service {
    name: string;
    connected: boolean;
    close(): void;
}
/**
 * Connector class
 * support multiple services
 */
export declare class Connector {
    metadata: grpc.Metadata;
    uri: string;
    services: Map<string, Service>;
    onopen?: (service: Service) => void;
    onclose?: (service: Service, ev: Event) => void;
    constructor(uri: string, token?: string);
    grpcClientRpcOptions(): grpc.ClientRpcOptions;
    close(): void;
    onHeaders(service: Service, headers: grpc.Metadata): void;
    onEnd(service: Service, status: grpc.Code, statusMessage: string, trailers: grpc.Metadata): void;
    /**
     * register service to connector
     * @date 2021-11-03
     * @param {any} service:Service
     * @returns {any}
     */
    registerService(service: Service): void;
}
