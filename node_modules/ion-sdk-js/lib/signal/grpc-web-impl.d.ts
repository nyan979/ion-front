import { Signal } from '.';
import { grpc } from '@improbable-eng/grpc-web';
import * as pb from '../_library/proto/sfu/sfu_pb';
import { Trickle } from '../client';
declare class IonSFUGRPCWebSignal implements Signal {
    protected client: grpc.Client<pb.SignalRequest, pb.SignalReply>;
    private _connected;
    private _event;
    private _onopen?;
    private _onclose?;
    private _onerror?;
    onnegotiate?: (jsep: RTCSessionDescriptionInit) => void;
    ontrickle?: (trickle: Trickle) => void;
    constructor(uri: string, metadata?: grpc.Metadata);
    join(sid: string, uid: string, offer: RTCSessionDescriptionInit): Promise<RTCSessionDescriptionInit>;
    trickle(trickle: Trickle): void;
    offer(offer: RTCSessionDescriptionInit): Promise<RTCSessionDescriptionInit>;
    answer(answer: RTCSessionDescriptionInit): void;
    close(): void;
    set onopen(onopen: () => void);
    set onerror(onerror: (error: Event) => void);
    set onclose(onclose: (ev: Event) => void);
}
export { IonSFUGRPCWebSignal };
